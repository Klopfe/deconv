standard_deviation = apply(matrix, 1, sd)
scaled = scale(matrix, center = rowMeans(matrix), scale=standard_deviation)
scaled = scale(t(matrix), center = rowMeans(matrix), scale=standard_deviation)
heatmap.2((data.matrix(t(scaled)), scale="none", dendrogram = "row")
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row")
help(heatmap.2)
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none")
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", key=FALSE)
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none")
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col="viridis")
library(viridis)
viridis(4)
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(4))
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(50))
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100))
help("viridis")
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, begin=1,end=0))
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=magma(100, begin=1,end=0))
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, begin=1,end=0))
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1))
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(3, direction = -1))
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(10, direction = -1))
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1))
help("heatmap.2")
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none")
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=90)
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0)
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,labCol = c("A", "B","C","D"))
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.5)
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=2)
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8)
matrix = read.table('/Users/qklopfenstein/Documents/these/datasets/deconvolution/GSE11103/GSE11103_X_complete.txt', header=TRUE, row.names=1, sep="\t")
matrix = rbind(rowMeans(matrix[,1:3]), rowMeans(matrix[,4:6]), rowMeans(matrix[,7:9]), rowMeans(matrix[,10:12]))
matrix = data.frame(t(matrix))
colnames(matrix) = c("Cell type A", "Cell type B", "Cell type C", "Cell type D")
ggpairs(matrix, diag="blank")
print("condition number:")
p = ggpairs(matrix, diag="blank", mapping = aes(color = sex, alpha = 0.7))
p = ggpairs(matrix, diag="blank", mapping = aes(color = "blue", alpha = 0.7))
p = ggpairs(matrix, diag="blank", params=c(colour="blue")))
p = ggpairs(matrix, diag="blank", params=c(colour="blue"))
help("wrap", package = "GGally")
p = ggpairs(matrix, diag="blank", lower = list(continuous = wrap("smooth", alpha = 0.3, size=0.1)))
p
p = ggpairs(matrix, diag="blank", lower = list(continuous = wrap("smooth", alpha = 0.3, size=0.1, col="blue")))
p
matrix = read.table('/Users/qklopfenstein/Documents/these/datasets/deconvolution/GSE11103/GSE11103_X.txt', header=TRUE, row.names=1, sep="\t")
matrix = matrix[,-5]
colnames(matrix) = c("Cell type A", "Cell type B", "Cell type C", "Cell type D")
ggpairs(matrix, diag="blank")
ggpairs(matrix, diag="blank" ,lower = list(continuous = wrap("smooth", alpha = 0.3, size=0.1, col="blue")))
#install if necessary
install.packages("gplots")
install.packages("gplots")
standard_deviation = apply(matrix, 1, sd)
scaled = scale(t(matrix), center = rowMeans(matrix), scale=standard_deviation)
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8)
help(heatmap.2)
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "z-score")
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.xlab = "z-score")
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score")
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(1000, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score")
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score")
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score")
matrix = read.table('/Users/qklopfenstein/Documents/these/datasets/deconvolution/GSE11103/GSE11103_X_complete.txt', header=TRUE, row.names=1, sep="\t")
matrix = rbind(rowMeans(matrix[,1:3]), rowMeans(matrix[,4:6]), rowMeans(matrix[,7:9]), rowMeans(matrix[,10:12]))
matrix = data.frame(t(matrix))
colnames(matrix) = c("Cell type A", "Cell type B", "Cell type C", "Cell type D")
p = ggpairs(matrix, diag="blank", lower = list(continuous = wrap("smooth", alpha = 0.3, size=0.1, col="blue")))
p
print("condition number:")
print(kappa(matrix))
matrix = read.table('/Users/qklopfenstein/Documents/these/datasets/deconvolution/GSE11103/GSE11103_X.txt', header=TRUE, row.names=1, sep="\t")
matrix = matrix[,-5]
colnames(matrix) = c("Cell type A", "Cell type B", "Cell type C", "Cell type D")
ggpairs(matrix, diag="blank" ,lower = list(continuous = wrap("smooth", alpha = 0.3, size=0.1, col="blue")))
print("condition number")
print(kappa(matrix))
#install if necessary
install.packages("gplots")
install.packages("gplots")
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score")
standard_deviation = apply(matrix, 1, sd)
scaled = scale(t(matrix), center = rowMeans(matrix), scale=standard_deviation)
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score")
matrix = read.table('/Users/qklopfenstein/Documents/these/datasets/deconvolution/GSE11103/GSE11103_X.txt', header=TRUE, row.names=1, sep="\t")
matrix = matrix[,-5]
colnames(matrix) = c("Cell type A", "Cell type B", "Cell type C", "Cell type D")
ggpairs(matrix, diag="blank" ,lower = list(continuous = wrap("smooth", alpha = 0.3, size=0.1, col="blue")))
print("condition number")
matrix = read.table('/Users/qklopfenstein/Documents/these/datasets/deconvolution/GSE11103/GSE11103_X.txt', header=TRUE, row.names=1, sep="\t")
matrix = matrix[,-5]
colnames(matrix) = c("Cell type A", "Cell type B", "Cell type C", "Cell type D")
ggpairs(matrix, diag="blank" ,lower = list(continuous = wrap("smooth", alpha = 0.3, size=0.1, col="blue")))
print("condition number")
print(kappa(matrix))
library(gplots)
standard_deviation = apply(matrix, 1, sd)
scaled = scale(t(matrix), center = rowMeans(matrix), scale=standard_deviation)
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score")
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score")
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score", sepcolor = "")
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score", sepcolor = "", sepwidth=c(0,0))
9944 - 1.96 * (1901 / sqrt(200))
9944 + 1.96 * (1901 / sqrt(200))
11210 * 9680.5
11210 * 10207.5
0.2 - 2.33 * sqrt(0.2 * 0.8) * sqrt(1500)
0.2 - 2.33 * sqrt(0.2 * 0.8) / sqrt(1500)
0.2 + 2.33 * sqrt(0.2 * 0.8) / sqrt(1500)
0.9 - 1.96 * sqrt(0.9) / sqrt(50)
0.9 + 1.96 * sqrt(0.9) / sqrt(50)
158 + 2.33 * 30 /sqrt(100)
9944 - 1.96 * 1901 / sqrt(200)
9944 + 1.96 * 1901 / sqrt(200)
11210*9680.5
11210*10207.5
0.2 - 2.33 * sqrt(0.2 * 0.8) / sqrt(1500)
0.2 + 2.33 * sqrt(0.2 * 0.8) / sqrt(1500)
1/(1/158 - 1.645 * (1/158) / sqrt(100))
15 - 4 * 1.645 / sqrt(13)
sqrt(13) / 4 * (13.18 - 14)
15 - (1.28 * 4) / sqrt(13)
sqrt(13) * (14.29 - 15) / 4
sqrt(13) / 4 * (13.58 - 14.5)
sqrt(13) * (14.29 - 15) / 4.05
sang = c(0.85, 0.9, 0.9, 0.95, 0.95, 0.95, 1.0, 1.0, 1.05)
mean(sang)
sd(sang)
var(sang)
0.95 - 3.3554 * 0.00375 / sqrt(9)
0.95 + 3.3554 * 0.00375 / sqrt(9)
0.95 - 3.3554 * sqrt(0.00375) / sqrt(9)
0.95 + 3.3554 * sqrt(0.00375) / sqrt(9)
0.95 - 2.3060 * sqrt(0.00375)/sqrt(9)
0.95 + 2.3060 * sqrt(0.00375)/sqrt(9)
158 + 2.32 * 30 / sqrt(100)
qt(0.99, 99)
qt(0.99, 999)
qt(0.99, 9999)
1 /(1/158 - 1.645 * (1/158) / sqrt(100))
15 - 1.645 * 4 / sqrt(13)
sqrt(13) * (13.175 -14) /4
15 - 1.28 * 4 /sqrt(13)
sqrt(13) * (14.29 -15)/4
sqrt(13) * (13.58 -14.5)/4
sqrt(13) * (14.29 - 15) / 4.05
245 - 1.96 * 245 / sqrt(10000)
245 + 1.96 * 245 / sqrt(10000)
set.seed(45)
Surface = round(runif(12,min=20,max=140),digits=1)
Bruit = rnorm(12,sd=100)
Energie = 7.8*Surface + Bruit
Surface
Energie <- round(Energie,digits=1)
Energie
plot(Surface,Energie,xlab="Surface (m2)",ylab="Energie (Kwh/an/m2)",xlim=c(0,150),ylim=c(0,1400))
summary(lm(Energie~Surface))
sum(Surface)
sum(Energie)
sum(Surface*Energie)
sum(Energie^2)
sum(Surface^2)
Energie
sd(Energie)
sd(Energie) * sqrt(11/12)
set.seed(43)
Surface = round(runif(12,min=20,max=140),digits=1)
Bruit = rnorm(12,sd=100)
Energie = 7.8*Surface + Bruit
Surface
Energie <- round(Energie,digits=1)
Energie
plot(Surface,Energie,xlab="Surface (m2)",ylab="Energie (Kwh/an/m2)",xlim=c(0,150),ylim=c(0,1400))
summary(lm(Energie~Surface))
sum(Surface)
sum(Energie)
sum(Surface*Energie)
sum(Energie^2)
sum(Surface^2)
sd(Energie)
sd(Energie) * sqrt(11 / 12)
mean(Energie)
set.seed(45)
Surface = round(runif(12,min=20,max=140),digits=1)
Bruit = rnorm(12,sd=100)
Energie = 7.8*Surface + Bruit
Surface
Energie <- round(Energie,digits=1)
Energie
plot(Surface,Energie,xlab="Surface (m2)",ylab="Energie (Kwh/an/m2)",xlim=c(0,150),ylim=c(0,1400))
summary(lm(Energie~Surface))
sum(Surface)
sum(Energie)
sum(Surface*Energie)
sum(Energie^2)
sum(Surface^2)
mean(Energie)
qt(0.95, 11)
qt(0.975, 11)
525.55 - 1.80 * 221.45 / sqrt(12)
525.55 + 1.80 * 221.45 / sqrt(12)
525.55 - 2.20 * 221.45 / sqrt(12)
525.55 + 2.20 * 221.45 / sqrt(12)
623.69 - 1.80 * 303.53 / sqrt(12)
623.69 + 1.80 * 303.53 / sqrt(12)
623.69 - 2.20 * 303.53 / sqrt(12)
623.69 + 2.20 * 303.53 / sqrt(12)
set.seed(43)
Surface = round(runif(12,min=20,max=140),digits=1)
Bruit = rnorm(12,sd=100)
Energie = 7.8*Surface + Bruit
Surface
Energie <- round(Energie,digits=1)
Energie
plot(Surface,Energie,xlab="Surface (m2)",ylab="Energie (Kwh/an/m2)",xlim=c(0,150),ylim=c(0,1400))
summary(lm(Energie~Surface))
sum(Surface)
sum(Energie)
sum(Surface*Energie)
sum(Energie^2)
sum(Surface^2)
#####
> Surface
[1]  78.2 129.3  26.9 104.6  57.6  85.2 101.5  80.8  42.0 124.7  66.9  39.1
> Energie <- round(Energie,digits=1)
> Energie
[1]  648.6 1002.5  141.2  625.3  629.7  567.9  756.4  740.9  384.2 1179.1  668.7  139.8
plot(Surface,Energie,xlab="Surface (m2)",ylab="Energie (Kwh/an/m2)",xlim=c(0,150),ylim=c(0,1400))
summary(lm(Energie~Surface))
Call:
lm(formula = Energie ~ Surface)
Residuals:
Min      1Q  Median      3Q     Max
-217.69  -74.42  -10.42  105.29  175.17
Coefficients:
Estimate Std. Error t value Pr(>|t|)
(Intercept)  -21.545    104.910  -0.205    0.841
Surface        8.265      1.245   6.639 5.79e-05 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
Residual standard error: 136.9 on 10 degrees of freedom
Multiple R-squared:  0.8151,	Adjusted R-squared:  0.7966
F-statistic: 44.08 on 1 and 10 DF,  p-value: 5.786e-05
> sum(Surface)
[1] 936.8
> sum(Energie)
[1] 7484.3
> sum(Surface*Energie)
[1] 684215.9
> sum(Energie^2)
[1] 5681322
> sum(Surface^2)
[1] 85224.7
set.seed(43)
Surface = round(runif(12,min=20,max=140),digits=1)
Bruit = rnorm(12,sd=100)
Energie = 7.8*Surface + Bruit
Surface
Energie <- round(Energie,digits=1)
Energie
plot(Surface,Energie,xlab="Surface (m2)",ylab="Energie (Kwh/an/m2)",xlim=c(0,150),ylim=c(0,1400))
plot(Surface,Energie,xlab="Surface (m2)",ylab="Energie (Kwh/an/m2)",xlim=c(0,150),ylim=c(0,1400), pch=17)
plot(Surface,Energie,xlab="Surface (m2)",ylab="Energie (Kwh/an/m2)",xlim=c(0,150),ylim=c(0,1400), pch=16)
plot(Surface,Energie,xlab="Surface (m2)",ylab="Energie (Kwh/an/m2)",xlim=c(0,150),ylim=c(0,1400), pch=16, color="blue")
plot(Surface,Energie,xlab="Surface (m2)",ylab="Energie (Kwh/an/m2)",xlim=c(0,150),ylim=c(0,1400), pch=16, col="blue")
7484.3/936.8
684215.9/85224.7
7484.3/12
1/12* 5681322 - (623.7)^2
sqrt(84441.81)
12/11 * 84441.81
sqrt(92118.34)
623.7 - 2.201 * 303.51 / sqrt(12)
623.7 + 2.201 * 303.51 / sqrt(12)
623.7 - 1.7959 * 303.51 / sqrt(12)
623.7 + 1.7959 * 303.51 / sqrt(12)
0.5^3
0.5^2
qt(0.975, 999)
set.seed(45)
Surface = round(runif(12,min=20,max=140),digits=1)
Bruit = rnorm(12,sd=100)
Energie = 7.8*Surface + Bruit
Surface
Energie <- round(Energie,digits=1)
Energie
plot(Surface,Energie,xlab="Surface (m2)",ylab="Energie (Kwh/an/m2)",xlim=c(0,150),ylim=c(0,1400))
set.seed(45)
Surface = round(runif(12,min=20,max=140),digits=1)
Bruit = rnorm(12,sd=100)
Energie = 7.8*Surface + Bruit
Surface
Energie <- round(Energie,digits=1)
Energie
plot(Surface,Energie,xlab="Surface (m2)",ylab="Energie (Kwh/an/m2)",xlim=c(0,150),ylim=c(0,1400))
summary(lm(Energie~Surface))
sum(Surface)
sum(Energie)
sum(Surface*Energie)
sum(Energie^2)
sum(Surface^2)
#####
> Surface
[1] 96.0  58.1  48.9  65.4  62.3  55.7  47.3  86.6  42.1  20.6  64.3 125.7
> Energie <- round(Energie,digits=1)
> Energie
[1]  698.7 435.7 562.3 487.1 372.9 456.1 492.2 836.4 368.5 133.4 497.9 965.4
plot(Surface,Energie,xlab="Surface (m2)",ylab="Energie (Kwh/an/m2)",xlim=c(0,150),ylim=c(0,1400))
summary(lm(Energie~Surface))
Call:
lm(formula = Energie ~ Surface)
6306.6/773
467719.6/58112.36
set.seed(45)
Surface = round(runif(12,min=20,max=140),digits=1)
Bruit = rnorm(12,sd=100)
Energie = 7.8*Surface + Bruit
Surface
Energie <- round(Energie,digits=1)
Energie
plot(Surface,Energie,xlab="Surface (m2)",ylab="Energie (Kwh/an/m2)",xlim=c(0,150),ylim=c(0,1400))
summary(lm(Energie~Surface))
sum(Surface)
sum(Energie)
sum(Surface*Energie)
sum(Energie^2)
sum(Surface^2)
#####
> Surface
[1] 96.0  58.1  48.9  65.4  62.3  55.7  47.3  86.6  42.1  20.6  64.3 125.7
> Energie <- round(Energie,digits=1)
> Energie
[1]  698.7 435.7 562.3 487.1 372.9 456.1 492.2 836.4 368.5 133.4 497.9 965.4
plot(Surface,Energie,xlab="Surface (m2)",ylab="Energie (Kwh/an/m2)",xlim=c(0,150),ylim=c(0,1400))
summary(lm(Energie~Surface))
Call:
lm(formula = Energie ~ Surface)
set.seed(45)
Surface = round(runif(12,min=20,max=140),digits=1)
Bruit = rnorm(12,sd=100)
Energie = 7.8*Surface + Bruit
Surface
Energie <- round(Energie,digits=1)
Energie
plot(Surface,Energie,xlab="Surface (m2)",ylab="Energie (Kwh/an/m2)",xlim=c(0,150),ylim=c(0,1400))
summary(lm(Energie~Surface))
sum(Surface)
sum(Energie)
sum(Surface*Energie)
sum(Energie^2)
sum(Surface^2)
summary(lm(Energie~Surface))
6306.6/12
1/12 3853861 - (525.55)^2
1/12*3853861 - (525.55)^2
12 / 11 * 44952.28
sqrt(49038.85)
sd(Energie)
set.seed(43)
Surface = round(runif(12,min=20,max=140),digits=1)
Bruit = rnorm(12,sd=100)
Energie = 7.8*Surface + Bruit
Surface
Energie <- round(Energie,digits=1)
Energie
plot(Surface,Energie,xlab="Surface (m2)",ylab="Energie (Kwh/an/m2)",xlim=c(0,150),ylim=c(0,1400))
summary(lm(Energie~Surface))
install.packages("SLOPE")
help("SLOPE")
SLOPE::abalone
SLOPE?
c≈
?SLOPE
set.seed(45)
Surface = round(runif(12,min=20,max=140),digits=1)
Bruit = rnorm(12,sd=100)
Energie = 7.8*Surface + Bruit
Surface
Energie <- round(Energie,digits=1)
Energie
plot(Surface,Energie,xlab="Surface (m2)",ylab="Energie (Kwh/an/m2)",xlim=c(0,150),ylim=c(0,1400))
mean(Energie) / mean(Surface)
summary(lm(Energie~Surface))
sd(Energie)
sd(Energie) * 11/12
mean(Energie)
sqrt(1/12 *3853861 - 525.55^2)
matrix = read.table('/Users/qklopfenstein/Documents/these/datasets/deconvolution/GSE11103/GSE11103_X.txt', header=TRUE, row.names=1, sep="\t")
matrix = matrix[,-5]
colnames(matrix) = c("Cell type A", "Cell type B", "Cell type C", "Cell type D")
ggpairs(matrix, diag="blank" ,lower = list(continuous = wrap("smooth", alpha = 0.3, size=0.1, col="blue")))
print("condition number")
print(kappa(matrix))
#install if necessary
install.packages("gplots")
library(gplots)
standard_deviation = apply(matrix, 1, sd)
scaled = scale(t(matrix), center = rowMeans(matrix), scale=standard_deviation)
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score", sepcolor = "", sepwidth=c(0,0))
library(ggplot2)
library(GGally)
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score", sepcolor = "", sepwidth=c(0,0))
library(ggplot2)
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score", sepcolor = "", sepwidth=c(0,0))
library(viridis)
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score", sepcolor = "", sepwidth=c(0,0))
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score", sepcolor = "", sepwidth=c(0,0), labRow = FALSE)
heatmap.2(data.matrix(t(scaled)), colsep=0, rowsep = 0, scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score", sepcolor = "", sepwidth=c(0,0), labRow = FALSE)
heatmap.2(data.matrix(t(scaled)), colsep=0, rowsep = 0, scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score", sepcolor = "", sepwidth=c(0,0), labRow = FALSE)
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score", sepcolor = "", sepwidth=c(0,0), labRow = FALSE)
heatmap.2(data.matrix(t(scaled)), scale="none", dendrogram = "row", density.info="none", col=viridis(100, direction = -1), trace="none",srtCol=0,cexCol=0.8,key.title = "", key.xlab = "z-score", rowsep=0, colsep=0, sepwidth=c(0,0), labRow = FALSE)
help(prnom)
help(pnorm)
pnorm(130, 124, 10)
1 - 0.7257469
pnorm(150, 124, 10)
3209/27
386221/27 - 118.85^2
118.95 - 1.96 * 10 / sqrt(27)
118.95 + 1.96 * 10 / sqrt(27)
qt(0.975, 26)
118.95 - 2.06 * sqrt(179.16) / sqrt(26)
118.95 + 2.06 * sqrt(179.16) / sqrt(26)
qt(0.95, 26)
118.85 - 124
-5.15 / sqrt(179.16)
-0.48 * sqrt(50) /sqrt(3)
pnorm(1.96, 0, 1)
qnorm(0.95, 0, 1)
3 * 1.64^2 / 0.48^2
0.48 * sqrt(36) / sqrt(3)
pnorm(1.663, 0, 1)
pnorm(1.663, 0, 1) - pnorm(-1.663, 0, 1)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DeconRNASeq")
library(DeconRNASeq)
browseVignettes("DeconRNASeq")
browseVignettes("DeconRNASeq")
help("DeconRNASeq")
X = matrix(randn(100), nrow=10, ncol=10)
help(rnorm)
X = matrix(rnorm(100), nrow=10, ncol=10)
y = matrix(rnorm(10), nrow=10, ncol=1)
res = decon_perso(y, X)
library(DeconRNASeq)
decon_perso = function(Mixture, Signature){
out = DeconRNASeq(datasets, signatures, checksig=FALSE, use.scale = TRUE, fig = TRUE)
return(out.all)
}
X = matrix(rnorm(100), nrow=10, ncol=10)
y = matrix(rnorm(10), nrow=10, ncol=1)
res = decon_perso(y, X)
help("DeconRNASeq")
y = as.data.frame(y)
res = decon_perso(y, X)
decon_perso = function(Mixture, Signature){
out = DeconRNASeq(Mixture, Signature, checksig=FALSE, use.scale = TRUE, fig = TRUE)
return(out.all)
}
X = matrix(rnorm(100), nrow=10, ncol=10)
y = matrix(rnorm(10), nrow=10, ncol=1)
res = decon_perso(y, X)
res = decon_perso(y, as.data.frame(X))
res = decon_perso(as.data.frame(y), as.data.frame(X))
res
X = matrix(rnorm(100), nrow=10, ncol=10)
y = matrix(rnorm(20), nrow=10, ncol=2)
res = decon_perso(as.data.frame(y), as.data.frame(X))
DeconRNASeq(as.data.frame(y), as.data.frame(X), checksig=FALSE, use.scale = TRUE, fig = TRUE)
out = DeconRNASeq(as.data.frame(y), as.data.frame(X), checksig=FALSE, use.scale = TRUE, fig = TRUE)
out.all
out[[1]]
decon_perso = function(Mixture, Signature){
out = DeconRNASeq(Mixture, Signature, checksig=FALSE, use.scale = TRUE, fig = FALSE)
return(out.all)
}
X = matrix(rnorm(100), nrow=10, ncol=10)
y = matrix(rnorm(20), nrow=10, ncol=2)
res = decon_perso(as.data.frame(y), as.data.frame(X))
results = out[[1]]
typeof(results)
results
help(setwd)
################################################################################################################################################
## Script name: FARDEEP.R
## Project: Deconvolution SSVR
## Description: Code function that will be called in python to perform deconvolution process with package FARDEEP
## Author: Quentin Klopfenstein
## Date: 20/09/2021
################################################################################################################################################
source("../sourcecode/fardeep_function.R")
getwd()
setwd()
setwd("~/Documents/these/deconv/deconv/expes/rnaseq")
################################################################################################################################################
## Script name: FARDEEP.R
## Project: Deconvolution SSVR
## Description: Code function that will be called in python to perform deconvolution process with package FARDEEP
## Author: Quentin Klopfenstein
## Date: 20/09/2021
################################################################################################################################################
source("simulated_rna/FARDEEP/sourcecode/fardeep_function.R")
install.packages("nnls")
install.packages("devtools")
devtools::install_github("GfellerLab/EPIC", build_vignettes=TRUE)
library(EPIC)
devtools::install_github("GfellerLab/EPIC")
library(EPIC)
help("EPIC")
bulk = matrix(rnorm(100), nrow=10, ncol=10)
